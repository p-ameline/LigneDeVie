package com.ldv.client.canvas;

import com.google.gwt.widgetideas.graphics.client.Color;

public 	class LdvPie extends LdvObject{
	
	private LdvCanvas canvas;
	private double centerX;
	private double centerY;
	private double radius;
	private double startAngle;
	private double endAngle;
	private String color;
	private int height;
	private String name = new String("pie");
	
	public LdvPie(LdvCanvas canvas, double centerX, double centerY, double radius, double startAngle, double endAngle,
			      String color, int height){
			
		this.canvas = canvas;
		this.centerX = centerX;
		this.centerY = centerY;
		this.radius = radius;
		this.startAngle = startAngle;
		this.endAngle = endAngle;
		this.color = color;
		this.height = height;
	}
	
    public void draw(){
		
		double pointX = radius*Math.cos(startAngle) + centerX;
		double pointY = radius*Math.sin(startAngle) + centerY;
		
		canvas.setFillStyle(new Color(color));
		canvas.setStrokeStyle(new Color("black"));
		canvas.beginPath();
		canvas.moveTo(centerX, centerY);
		//the parameters of cos() ,sin() are radians
		canvas.lineTo(pointX, pointY);		
		canvas.arc(centerX,centerY,radius,startAngle,endAngle,false);
		canvas.closePath();
		canvas.fill();
		canvas.stroke();		
	}
	
	public int getHeight(){
		return this.height;
	}
	
	public boolean contain(double x, double y){
				
		Cartesian cartesian = new Cartesian(x,y);
		Polar polar = this.cartesianToPolar(cartesian, centerX, centerY);
		
		double angleX = x - centerX;
		double angleY = y - centerY;
		
		if(angleX*angleX + angleY*angleY <= radius*radius){			
			double angle = polar.getAngle();
			if(angle>=startAngle && angle<=endAngle){
				System.out.println(color+" Pie");
				return true;
			}		
		}		
		return false;	
	}

	@Override
	public String getName() {
		return this.name;
	}
	
	public double getStartAngle(){
		return this.startAngle;
	}
	
	public double getEndAngle(){
		return this.endAngle;
	}
	
	public double getRadius(){
		return this.radius;
	}
}
