package com.ldv.client.canvas;

import java.util.ArrayList;
import java.util.Iterator;

public class LdvRosaceStructure {

	private int    _iAngle ;
	private String _sLabel ;
	private int    _iRadiusMin ;
	private int    _iRadiusMax ;
	private ArrayList<LdvPetalDescriptor> _vPetals ;
	
	public LdvRosaceStructure(int angle, String label, int radiusMin, int radiusMax)
	{	
		_iAngle     = angle ;
		_sLabel     = label ;
		_iRadiusMin = radiusMin ;
		_iRadiusMax = radiusMax ;				
		_vPetals    = new ArrayList<LdvPetalDescriptor>() ;
	}

	public boolean isCenter() {
		return (0 == _iRadiusMin) && (0 == _iRadiusMax) ;
	}
	
	public int getAngle() {
		return _iAngle ;
	}

	public void setAngle(int angle) {
		_iAngle = angle ;
	}

	public String getLabel() {
		return _sLabel ;
	}

	public void setLabel(String label) {
		_sLabel = label ;
	}

	public int getRadiusMin() {
		return _iRadiusMin ;
	}

	public void setRadiusMin(int radiusMin) {
		_iRadiusMin = radiusMin ;
	}

	public int getRadiusMax() {
		return _iRadiusMax ;
	}

	public void setRadiusMax(int radiusMax) {
		_iRadiusMax = radiusMax ;
	}
	
	public LdvPetalDescriptor getPetalDescriptor(int iRadius)
	{
		if (_vPetals.isEmpty())
			return null ;
		
		Iterator<LdvPetalDescriptor> it = _vPetals.iterator() ;
		while(it.hasNext())
		{
			LdvPetalDescriptor currentPetal = it.next() ;
			if (currentPetal.getRadius() == iRadius)
				return currentPetal ;
		}
		
		return null ;
	}
	
	public ArrayList<LdvPetalDescriptor> getPetals() {
		return _vPetals ;
	}

	public class LdvPetalDescriptor {
		
		int    _iRadius ;
		String _sColor ;
		
		public LdvPetalDescriptor(int radius, String color) {
			this._iRadius = radius ;
			this._sColor  = color ;		
		}
		
		public int getRadius() {
			return _iRadius ;
		}
		
		public void setRadius(int iRadius) {
			_iRadius = iRadius ;
		}
		
		public String getColor() {
			return _sColor ;
		}
		
		public void setColor(String sColor) {
			_sColor = sColor ;
		}
	}
}
