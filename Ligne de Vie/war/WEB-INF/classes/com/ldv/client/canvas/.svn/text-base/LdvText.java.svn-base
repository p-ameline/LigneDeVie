package com.ldv.client.canvas;

import com.swtb.font.client.Simplex;

public class LdvText extends LdvObject{

	private LdvCanvas _canvas ;
	private double    _centerX ;
	private double    _centerY ;
	private double    _radius ;
	private double    _startAngle ;
	private double    _endAngle ;
	private String    _text ;
	private String    _name = new String("text") ;
	
	private final int _space = 30 ;
	private double    _angle ;
	private double    _angleLetter ;
	
	public LdvText(LdvCanvas canvas, double centerX, double centerY, double radius, double startAngle, double endAngle, String text)
	{
		_canvas      = canvas ;
		_centerX     = centerX ;
		_centerY     = centerY ;
		_radius      = radius + _space ;
		_startAngle  = startAngle ;
		_endAngle    = endAngle ;
		_text        = text ;
		_angle       = endAngle - startAngle ;
		_angleLetter = _angle / (text.length()) ;
	}
	
	@Override
	public boolean contain(double x, double y) {
		return false;
	}

	@Override
	public void draw() 
	{
		for (int i = 0 ; i <= _text.length()-1 ; i++)
		{
			String letter = String.valueOf(_text.charAt(i)) ;
			double angleCurrent = _startAngle + i * _angleLetter ;
			double xCurrent = _centerX + _radius * Math.cos(angleCurrent) ;
			double yCurrent = _centerY + _radius * Math.sin(angleCurrent) ;

			double angleLean = -(Math.PI/2 + angleCurrent) ;
			 
			Simplex simplex = new Simplex() ;
			_canvas.setFont(simplex) ;
			 
			_canvas.saveContext() ;
			//canvas.setItalic(true) ;
			_canvas.setLineWidth(1.25) ;
			_canvas.beginPath() ;
			_canvas.textTo(letter, xCurrent, yCurrent, angleLean, 0.8) ;
			_canvas.stroke() ;
			_canvas.restoreContext() ;       
		}
	}

	@Override
	public int getHeight() {
		return 0;
	}

	@Override
	public String getName() {
		return _name ;
	}

	@Override
	public double getEndAngle() {
		return _endAngle ;
	}

	@Override
	public double getRadius() {
		return 0;
	}

	@Override
	public double getStartAngle() {
		return 0;
	}	
}
